<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--    This file generated by program.   -->
<!--         Do Not Modify It.            -->
<!-- Genertion Time : 2022-02-26 15:56:18 -->
<mapper namespace="org.chun.plutus.common.dao.base.ActivityPaymentBaseDao">

    <resultMap id="vo" type="activityPaymentVo">
        <id column="acp_num" property="acpNum"/>
        <result column="act_num" property="actNum"/>
        <result column="acd_num" property="acdNum"/>
        <result column="user_num" property="userNum"/>
        <result column="price" property="price"/>
        <result column="is_paid" property="isPaid"/>
        <result column="pay_date" property="payDate"/>
    </resultMap>

    <sql id="columnsAlias">
        ${alias}.acp_num as ${prefix}acp_num,
        ${alias}.act_num as ${prefix}act_num,
        ${alias}.acd_num as ${prefix}acd_num,
        ${alias}.user_num as ${prefix}user_num,
        ${alias}.price as ${prefix}price,
        ${alias}.is_paid as ${prefix}is_paid,
        D19(${alias}.pay_date) as ${prefix}pay_date
    </sql>

    <select id="query" resultMap="vo">
        select
        <include refid="columnsAlias">
            <property name="alias" value="activityPayment"/>
            <property name="prefix" value=""/>
        </include>
        from activity_payment activityPayment
        <trim prefix="where" prefixOverrides="and | or">
            <if test="acpNum!=null">and acp_num=#{acpNum}</if>
            <if test="actNum!=null">and act_num=#{actNum}</if>
            <if test="acdNum!=null">and acd_num=#{acdNum}</if>
            <if test="userNum!=null">and user_num=#{userNum}</if>
            <if test="price!=null">and price=#{price}</if>
            <if test="isPaid!=null">and is_paid=#{isPaid}</if>
            <if test="payDate!=null">and pay_date=to_timestamp(#{payDate}, 'YYYY-MM-DD HH24:MI:SS')</if>
        </trim>
    </select>

    <select id="listAll" resultMap="vo">
        select
        <include refid="columnsAlias">
            <property name="alias" value="activityPayment"/>
            <property name="prefix" value=""/>
        </include>
        from activity_payment activityPayment
    </select>

    <select id="count" resultType="Integer">
        select count(*)
        from activity_payment
        <trim prefix="where" prefixOverrides="and | or">
            <if test="acpNum!=null">and acp_num=#{acpNum}</if>
            <if test="actNum!=null">and act_num=#{actNum}</if>
            <if test="acdNum!=null">and acd_num=#{acdNum}</if>
            <if test="userNum!=null">and user_num=#{userNum}</if>
            <if test="price!=null">and price=#{price}</if>
            <if test="isPaid!=null">and is_paid=#{isPaid}</if>
            <if test="payDate!=null">and pay_date=to_timestamp(#{payDate}, 'YYYY-MM-DD HH24:MI:SS')</if>
        </trim>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyColumn="acp_num" keyProperty="acpNum">
        insert into activity_payment (
        <trim prefix="" prefixOverrides=",">
            <if test="acpNum!=null">, acp_num</if>
            <if test="actNum!=null">, act_num</if>
            <if test="acdNum!=null">, acd_num</if>
            <if test="userNum!=null">, user_num</if>
            <if test="price!=null">, price</if>
            <if test="isPaid!=null">, is_paid</if>
            <if test="payDate!=null">, pay_date</if>
        </trim>
        ) values (
        <trim prefix="" prefixOverrides=",">
            <if test="acpNum!=null">, #{acpNum}</if>
            <if test="actNum!=null">, #{actNum}</if>
            <if test="acdNum!=null">, #{acdNum}</if>
            <if test="userNum!=null">, #{userNum}</if>
            <if test="price!=null">, #{price}</if>
            <if test="isPaid!=null">, #{isPaid}</if>
            <if test="payDate!=null">, to_timestamp(#{payDate}, 'YYYY-MM-DD HH24:MI:SS')</if>
        </trim>
        )
    </insert>

    <delete id="delete">
        delete from activity_payment
        <trim prefix="where" prefixOverrides="and">
            <if test="acpNum!=null">and acp_num=#{acpNum}</if>
            <if test="actNum!=null">and act_num=#{actNum}</if>
            <if test="acdNum!=null">and acd_num=#{acdNum}</if>
            <if test="userNum!=null">and user_num=#{userNum}</if>
            <if test="price!=null">and price=#{price}</if>
            <if test="isPaid!=null">and is_paid=#{isPaid}</if>
            <if test="payDate!=null">and pay_date=to_timestamp(#{payDate}, 'YYYY-MM-DD HH24:MI:SS')</if>
        </trim>
    </delete>


    <select id="getByPk" resultMap="vo">
        select
        <include refid="columnsAlias">
            <property name="alias" value="activityPayment"/>
            <property name="prefix" value=""/>
        </include>
        from activity_payment activityPayment
        where
        acp_num=#{acpNum}
    </select>

    <delete id="deleteByPk">
        delete from activity_payment
        where
        acp_num=#{acpNum}
    </delete>

    <update id="update">
        update activity_payment
        <trim prefix="set" prefixOverrides=",">

            <if test="actNum!=null">, act_num=#{actNum}</if>
            <if test="acdNum!=null">, acd_num=#{acdNum}</if>
            <if test="userNum!=null">, user_num=#{userNum}</if>
            <if test="price!=null">, price=#{price}</if>
            <if test="isPaid!=null">
                <if test="isPaid!=''">, is_paid=#{isPaid}</if>
                <if test="isPaid==''">, is_paid=null</if>
            </if>
            <if test="payDate!=null">
                <if test="payDate!=''">, pay_date=to_timestamp(#{payDate}, 'YYYY-MM-DD HH24:MI:SS')</if>
                <if test="payDate==''">, pay_date=null</if>
            </if>
        </trim>
        where
        acp_num=#{acpNum}
    </update>

    <update id="forceUpdate">
        update activity_payment
        <trim prefix="set" prefixOverrides=",">
            , act_num=#{actNum}

            , acd_num=#{acdNum}

            , user_num=#{userNum}

            , price=#{price}

            <if test="isPaid!=''">, is_paid=#{isPaid}</if>
            <if test="isPaid==''">, is_paid=null</if>

            <if test="payDate!=''">, pay_date=to_timestamp(#{payDate}, 'YYYY-MM-DD HH24:MI:SS')</if>
            <if test="payDate==''">, pay_date=null</if>

        </trim>
        where
        acp_num=#{acpNum}
    </update>

</mapper>
